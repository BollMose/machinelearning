
# predict
A1 = [ones(rows(X),1) X];
Z2 = A1 * Theta1';
X2 = sigmoid(Z2);

A2 = [ones(rows(X2),1) X2];
Z3 = A2 * Theta2';
HX = sigmoid(Z3); %X3

% Thank you for your reminder.
[m, p] = max(HX, [], 2);


# lrCostFunction
hx = sigmoid(X * theta);
theta(1) = 0;
J = 1/m * sum(-y .* log(hx) - (1 - y) .* log(1-hx)) + lambda/2/m*sum(theta.^2);
grad = 1/m * (X' * (hx - y)) + lambda/m*theta;

# oneVsAll
     % Set Initial theta
     initial_theta = zeros(n + 1, 1);

     % Set options for fminunc
     options = optimset('GradObj', 'on', 'MaxIter', 50);

     % Run fmincg to obtain the optimal theta
     % This function will return theta and the cost
     for c = 1: num_labels,
         theta = fmincg (@(t)(lrCostFunction(t, X, (y == c), lambda)),initial_theta, options);
         all_theta(c,:) = theta;
         
# predictOneVsAll
HX = X * all_theta'; 
[m,p] = max(HX, [], 2); 
